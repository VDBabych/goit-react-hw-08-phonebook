{"version":3,"file":"static/js/383.dcfdbc9c.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/form-control/dist/chunk-WFX3T3Z6.mjs","Page/RegisterForm.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-3HLJVDJ7.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-PXXQR4UW.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-JSSKUSQH.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/form-error.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormErrorStylesProvider, useFormErrorStyles] = createContext({\n  name: `FormErrorStylesContext`,\n  errorMessage: `useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormError />\" `\n});\nvar FormErrorMessage = forwardRef(\n  (props, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", props);\n    const ownProps = omitThemingProps(props);\n    const field = useFormControlContext();\n    if (!(field == null ? void 0 : field.isInvalid))\n      return null;\n    return /* @__PURE__ */ jsx(FormErrorStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getErrorMessageProps(ownProps, ref),\n        className: cx(\"chakra-form__error-message\", props.className),\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.text\n        }\n      }\n    ) });\n  }\n);\nFormErrorMessage.displayName = \"FormErrorMessage\";\nvar FormErrorIcon = forwardRef((props, ref) => {\n  const styles = useFormErrorStyles();\n  const field = useFormControlContext();\n  if (!(field == null ? void 0 : field.isInvalid))\n    return null;\n  const _className = cx(\"chakra-form__error-icon\", props.className);\n  return /* @__PURE__ */ jsx(\n    Icon,\n    {\n      ref,\n      \"aria-hidden\": true,\n      ...props,\n      __css: styles.icon,\n      className: _className,\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n        }\n      )\n    }\n  );\n});\nFormErrorIcon.displayName = \"FormErrorIcon\";\n\nexport {\n  useFormErrorStyles,\n  FormErrorMessage,\n  FormErrorIcon\n};\n","import { useState } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  Button,\n} from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport PropTypes from 'prop-types';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n    setEmail('');\n    setName('');\n    setPassword('');\n  };\n  return (\n    <FormControl\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n      as=\"form\"\n      w=\"40%\"\n      m=\"60px auto 0px\"\n      align=\"center\"\n    >\n      <FormLabel>Name</FormLabel>\n      <Input\n        isInvalid={name === ''}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={name}\n        isRequired\n        placeholder=\"Name\"\n        onChange={handleChange}\n      />\n      {name === '' && <FormErrorMessage>Name is required.</FormErrorMessage>}\n\n      <FormLabel>Email</FormLabel>\n      <Input\n        isInvalid={email === ''}\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        pattern=\"^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$\"\n        isRequired\n        placeholder=\"Exaple: User@mail.com\"\n      />\n      {email === '' && <FormErrorMessage>Email is required.</FormErrorMessage>}\n      <FormLabel>Password </FormLabel>\n      <Input\n        isInvalid={password === ''}\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        pattern=\"^.{7,}$\"\n        isRequired\n        placeholder=\"Passwords must be at least 7 characters\"\n      />\n      {password === '' && (\n        <FormErrorMessage>Password is required.</FormErrorMessage>\n      )}\n      <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n        Create account\n      </Button>\n    </FormControl>\n  );\n};\nRegisterForm.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  password: PropTypes.string,\n};\nexport default RegisterForm;\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      var _a, _b;\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        id: (_a = props2.id) != null ? _a : labelId,\n        htmlFor: (_b = props2.htmlFor) != null ? _b : id\n      };\n    },\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["createContext","name","errorMessage","FormErrorStylesProvider","useFormErrorStyles","FormErrorMessage","forwardRef","props","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","field","useFormControlContext","isInvalid","jsx","value","children","chakra","getErrorMessageProps","className","cx","__css","display","alignItems","text","displayName","_className","Icon","icon","fill","d","dispatch","useDispatch","useState","setName","email","setEmail","password","setPassword","handleChange","target","onSubmit","e","preventDefault","register","autoComplete","as","w","m","align","I","type","pattern","title","isRequired","placeholder","onChange","mt","colorScheme","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","getLabelProps","jsxs","textAlign","useFormControlStyles","getRequiredIndicatorProps","FormControlStylesProvider","strict","FormControlProvider","FormControl","idProp","id","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","_b","dataAttr","htmlFor","getRootProps","role","onFocus","onBlur","useFormControlProvider","context","helperText","useFormControl","_c","disabled","readOnly","required","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","size"],"sourceRoot":""}